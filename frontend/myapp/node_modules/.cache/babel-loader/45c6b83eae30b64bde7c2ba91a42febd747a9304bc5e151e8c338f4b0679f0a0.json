{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAIL, LOGOUT_SUCCESS, LOGOUT_FAIL, UPDATE_PROFILE_REQUEST, UPDATE_PROFILE_SUCCESS, UPDATE_PROFILE_FAIL, UPDATE_PASSWORD_REQUEST, UPDATE_PASSWORD_SUCCESS, UPDATE_PASSWORD_RESET, UPDATE_PASSWORD_FAIL, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAIL } from \"../constants/userConstants\";\n\n// Login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Register user\n\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/register\", userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Load user\n\nexport const loadUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/me\");\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update profile\n\nexport const updateProfile = userData => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/v1/me/update\", userData, config);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Update password\n\nexport const updatePassword = passwords => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/v1/password/update\", passwords, config);\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Forgot password\n\nexport const forgotPassword = passwords => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PASSWORD_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"/api/v1/password/update\", passwords, config);\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Logout user\n\nexport const logoutUser = () => async dispatch => {\n  try {\n    await axios.get(\"/api/v1/logout\");\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// clear errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","REGISTER_USER_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","register","userData","loadUser","get","updateProfile","put","success","updatePassword","passwords","forgotPassword","logoutUser","clearErrors"],"sources":["/Users/anyagapyuk/Desktop/nature-aesthetic/frontend/myapp/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\n\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  CLEAR_ERRORS,\n  REGISTER_USER_FAIL,\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  LOAD_USER_FAIL,\n  LOGOUT_SUCCESS,\n  LOGOUT_FAIL,\n  UPDATE_PROFILE_REQUEST,\n  UPDATE_PROFILE_SUCCESS,\n  UPDATE_PROFILE_FAIL,\n  UPDATE_PASSWORD_REQUEST,\n  UPDATE_PASSWORD_SUCCESS,\n  UPDATE_PASSWORD_RESET,\n  UPDATE_PASSWORD_FAIL,\n  FORGOT_PASSWORD_REQUEST,\n  FORGOT_PASSWORD_SUCCESS,\n  FORGOT_PASSWORD_FAIL,\n} from \"../constants/userConstants\";\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: LOGIN_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/v1/login\",\n      { email, password },\n      config\n    );\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user,\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Register user\n\nexport const register = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: REGISTER_USER_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\"/api/v1/register\", userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user,\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Load user\n\nexport const loadUser = () => async (dispatch) => {\n  try {\n    dispatch({ type: LOAD_USER_REQUEST });\n\n    const { data } = await axios.get(\"/api/v1/me\");\n    dispatch({\n      type: LOAD_USER_SUCCESS,\n      payload: data.user,\n    });\n  } catch (error) {\n    dispatch({\n      type: LOAD_USER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update profile\n\nexport const updateProfile = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PROFILE_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.put(\"/api/v1/me/update\", userData, config);\n    dispatch({\n      type: UPDATE_PROFILE_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PROFILE_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update password\n\nexport const updatePassword = (passwords) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PASSWORD_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.put(\n      \"/api/v1/password/update\",\n      passwords,\n      config\n    );\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Forgot password\n\nexport const forgotPassword = (passwords) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PASSWORD_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.put(\n      \"/api/v1/password/update\",\n      passwords,\n      config\n    );\n    dispatch({\n      type: UPDATE_PASSWORD_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PASSWORD_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Logout user\n\nexport const logoutUser = () => async (dispatch) => {\n  try {\n    await axios.get(\"/api/v1/logout\");\n    dispatch({\n      type: LOGOUT_SUCCESS,\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGOUT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// clear errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}