{"ast":null,"code":"import axios from \"axios\";\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS, REGISTER_USER_FAIL, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS } from \"../constants/userConstants\";\n\n// Login\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Register user\n\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/register\", {\n      userData\n    }, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// clear errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","REGISTER_USER_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","register","userData","clearErrors"],"sources":["/Users/anyagapyuk/Desktop/nature-aestethic/frontend/myapp/src/actions/userActions.js"],"sourcesContent":["import axios from \"axios\";\n\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  CLEAR_ERRORS,\n  REGISTER_USER_FAIL,\n  REGISTER_USER_REQUEST,\n  REGISTER_USER_SUCCESS,\n} from \"../constants/userConstants\";\n\n// Login\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: LOGIN_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      \"/api/v1/login\",\n      { email, password },\n      config\n    );\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user,\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Register user\n\nexport const register = (userData) => async (dispatch) => {\n  try {\n    dispatch({ type: REGISTER_USER_REQUEST });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    const { data } = await axios.post(\"/api/v1/register\", { userData }, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user,\n    });\n  } catch (error) {\n    dispatch({\n      type: REGISTER_USER_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// clear errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACEC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,YAAY,EACZC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,QAChB,4BAA4B;;AAEnC;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAc,CAAC,CAAC;IACjC,MAAMY,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/B,eAAe,EACf;MAAEP,KAAK;MAAEC;IAAS,CAAC,EACnBG,MACF,CAAC;IACDF,QAAQ,CAAC;MACPC,IAAI,EAAEV,aAAa;MACnBe,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPC,IAAI,EAAET,UAAU;MAChBc,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAK,MAAOZ,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEN;IAAsB,CAAC,CAAC;IACzC,MAAMO,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,kBAAkB,EAAE;MAAEO;IAAS,CAAC,EAAEV,MAAM,CAAC;IAC3EF,QAAQ,CAAC;MACPC,IAAI,EAAEL,qBAAqB;MAC3BU,OAAO,EAAEF,IAAI,CAACG;IAChB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,QAAQ,CAAC;MACPC,IAAI,EAAEP,kBAAkB;MACxBY,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IAC/B,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM,MAAOb,QAAQ,IAAK;EACnDA,QAAQ,CAAC;IACPC,IAAI,EAAER;EACR,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}